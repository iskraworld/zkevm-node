// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	pb "github.com/0xPolygonHermez/zkevm-node/aggregator_v2/pb"
	mock "github.com/stretchr/testify/mock"
)

// EthTxManagerMock is an autogenerated mock type for the ethTxManager type
type EthTxManagerMock struct {
	mock.Mock
}

// SendProof provides a mock function with given fields: ctx, proof
func (_m *EthTxManagerMock) SendProof(ctx context.Context, proof *pb.FinalProof) error {
	ret := _m.Called(ctx, proof)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *pb.FinalProof) error); ok {
		r0 = rf(ctx, proof)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewEthTxManagerMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewEthTxManagerMock creates a new instance of EthTxManagerMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEthTxManagerMock(t mockConstructorTestingTNewEthTxManagerMock) *EthTxManagerMock {
	mock := &EthTxManagerMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
